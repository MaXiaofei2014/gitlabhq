%h3.page-title
  User:
  = @user.name
  - if @user.blocked?
    %span.cred (Blocked)
  - if @user.admin
    %span.cred (Admin)

  .pull-right
    = link_to edit_admin_user_path(@user), class: "btn btn-grouped" do
      %i.fa.fa-pencil-square-o
      Edit
%hr
%ul.nav.nav-tabs
  %li.active
    %a{"data-toggle" => "tab", href: "#account"} Account
  %li
    %a{"data-toggle" => "tab", href: "#profile"} Profile
  %li
    %a{"data-toggle" => "tab", href: "#groups"} Groups
  %li
    %a{"data-toggle" => "tab", href: "#projects"} Projects
  %li
    %a{"data-toggle" => "tab", href: "#ssh-keys"} SSH keys

.tab-content
  #account.tab-pane.active
    .row
      .col-md-6
        .panel.panel-default
          .panel-heading
            账号：
          %ul.well-list
            %li
              %span.light 姓名：
              %strong= @user.name
            %li
              %span.light 用户名：
              %strong
                = @user.username
            %li
              %span.light 电子邮箱：
              %strong
                = mail_to @user.email
            - @user.emails.each do |email|
              %li
                %span.light 第二电子邮箱：
                %strong= email.email
                = link_to remove_email_admin_user_path(@user, email), data: { confirm: "确定要删除 #{email.email}？" }, method: :delete, class: "btn-tiny btn btn-remove pull-right", title: '删除第二电子邮箱', id: "remove_email_#{email.id}" do
                  %i.fa.fa-times

            %li
              %span.light 是否可以创建群组：
              %strong
                = @user.can_create_group ? "是" : "否"
            %li
              %span.light 个人项目限制：
              %strong
                = @user.projects_limit
            %li
              %span.light 注册时间：
              %strong
                = @user.created_at.stamp("2031-12-31")
            - if @user.confirmed_at
              %li
                %span.light 确认时间：
                %strong
                  = @user.confirmed_at.stamp("2031-12-31")
            - else
              %li
                %span.light 已确认：
                %strong.cred
                  否

            %li
              %span.light 当前登录时间：
              %strong
                - if @user.current_sign_in_at
                  = @user.current_sign_in_at.stamp("2031-12-31")
                - else
                  从未

            %li
              %span.light 上次登录时间：
              %strong
                - if @user.last_sign_in_at
                  = @user.last_sign_in_at.stamp("2031-12-31")
                - else
                  从未

            %li
              %span.light 登录次数：
              %strong
                = @user.sign_in_count

            - if @user.ldap_user?
              %li
                %span.light LDAP uid:
                %strong
                  = @user.ldap_identity.extern_uid

            - if @user.created_by
              %li
                %span.light 创建者：
                %strong
                  = link_to @user.created_by.name, [:admin, @user.created_by]

      .col-md-6
        - unless @user == current_user
          - if @user.blocked?
            .alert.alert-info
              %h4 该用户被禁用
              %p 禁用用户有如下效果：
              %ul
                %li 用户无法登录
                %li 用户无法访问 git 版本仓库
                %li 用户将从加入的项目和群组中删除
                %li 个人项目将被移除
                %li 拥有的群组将被移除
              %br
              = link_to '启用用户', unblock_admin_user_path(@user), method: :put, class: "btn btn-new", data: { confirm: '确认要继续么？' }
          - else
            .alert.alert-warning
              %h4 禁用用户
              %p 禁用用户有如下效果：
              %ul
                %li 用户无法登录
                %li 用户无法访问 git 版本仓库
                %li 用户将从加入的项目和群组中删除
                %li 个人项目将被移除
                %li 拥有的群组将被移除
              %br
              = link_to '禁用用户', block_admin_user_path(@user), data: { confirm: '用户将被禁用！确定要继续么？' }, method: :put, class: "btn btn-remove"

          .alert.alert-danger
            %h4
              删除用户
            %p 删除用户有如下效果：
            %ul
              %li 所有用户内容，比如：问题、代码片段、注释都将被删除
              - rp = @user.personal_projects.count
              - unless rp.zero?
                %li #{pluralize rp, '个个人项目', '个个人项目'}将被删除并无法恢复
              - if @user.solo_owned_groups.present?
                %li
                  下列群组以及其内容也将被删除：
                  %strong #{@user.solo_owned_groups.map(&:name).join(', ')}
            %br
            = link_to '删除用户', [:admin, @user], data: { confirm: "用户 #{@user.name} 将被删除！确定要继续么？" }, method: :delete, class: "btn btn-remove"

  #profile.tab-pane
    .row
      .col-md-6
        .panel.panel-default
          .panel-heading
            = @user.name
          %ul.well-list
            %li
              = image_tag avatar_icon(@user.email, 60), class: "avatar s60"
            %li
              %span.light 个人资料页面：
              %strong
                = link_to user_path(@user) do
                  = @user.username
      .col-md-6
        = render 'users/profile', user: @user

  #groups.tab-pane
    - if @user.group_members.present?
      .panel.panel-default
        .panel-heading 群组：
        %ul.well-list
          - @user.group_members.each do |user_group|
            - group = user_group.group
            %li.group_member
              %span{class: ("list-item-name" unless user_group.owner?)}
                %strong= link_to group.name, admin_group_path(group)
              .pull-right
                %span.light= user_group.human_access
                - unless user_group.owner?
                  = link_to group_group_member_path(group, user_group), data: { confirm: remove_user_from_group_message(group, @user) }, method: :delete, remote: true, class: "btn-tiny btn btn-remove", title: '从群组删除用户' do
                    %i.fa.fa-times.fa-inverse
    - else
      .nothing-here-block 此用户没有群组。

  #projects.tab-pane
    - if @user.groups.any?
      .panel.panel-default
        .panel-heading 群组项目
        %ul.well-list
          - @user.groups.each do |group|
            %li
              %strong= group.name
              &ndash; 访问
              #{pluralize(group.projects.count, '个项目', '个项目')}

    .row
      .col-md-6
        = render 'users/projects', projects: @personal_projects

      .col-md-6
        .panel.panel-default
          .panel-heading 已加入的项目 (#{@joined_projects.count})
          %ul.well-list
            - @joined_projects.sort_by(&:name_with_namespace).each do |project|
              - tm = project.team.find_tm(@user.id)
              %li.project_member
                .list-item-name
                  = link_to admin_project_path(project), class: dom_class(project) do
                    = project.name_with_namespace

                - if tm
                  .pull-right
                    - if tm.owner?
                      %span.light 所有者
                    - else
                      %span.light= tm.human_access

                      - if tm.respond_to? :project
                        = link_to project_team_member_path(project, @user), data: { confirm: remove_from_project_team_message(project, @user) }, remote: true, method: :delete, class: "btn-tiny btn btn-remove", title: '从项目中删除用户' do
                          %i.fa.fa-times
  #ssh-keys.tab-pane
    = render 'profiles/keys/key_table', admin: true
